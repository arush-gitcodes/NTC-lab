def extended_gcd(a, b, x, y):
    # Base case: if b is zero, the GCD is a, and x = 1, y = 0
    if b == 0:
        x[0] = 1
        y[0] = 0
        return a
    
    # Create temporary arrays to hold the recursive results
    x1 = [0]
    y1 = [0]
    
    # Recursive case: a = b * q + r
    gcd = extended_gcd(b, a % b, x1, y1)
    
    # Update x and y using the results of the recursive call
    x[0] = y1[0]
    y[0] = x1[0] - (a // b) * y1[0]
    
    return gcd

if __name__ == "__main__":
    # Get user input
    a = int(input("Enter the first integer (a): "))
    b = int(input("Enter the second integer (b): "))
    
    # Arrays to store the coefficients
    x = [0]
    y = [0]
    
    # Compute the GCD and coefficients using the extended GCD algorithm
    gcd = extended_gcd(a, b, x, y)
    
    # Display the results
    print(f"The GCD of {a} and {b} is: {gcd}")
    print(f"Coefficients: x = {x[0]}, y = {y[0]}")
